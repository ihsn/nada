swagger: '2.0'
info:
  description: >-
    The NADA REST API allows searching, browsing and viewing the catalog. Use the metadata endpoints to extract detailed study metadata as JSON. 
    

    Find out more about NADA at
    [http://nada.ihsn.org](http://nada.ihsn.org).  

    
  version: 1.0.0
  title: NADA API
  x-logo:
    url: ""
    backgroundColor: "#FFFFFF"
    altText: ""
basePath: /index.php/api/
tags:
  - name: Collections
    description: Collections

  - name: Catalog
    description: API to browse, search and explore studies in the catalog

  - name: Metadata
    description: Access metadata and documentation available for the studies in the catalog


x-tagGroups:
  - name: Collections
    tags:
      - Collections
  - name: Catalog
    tags:
      - Catalog
  - name: Metadata
    tags:
      - Metadata    
schemes:
  - http
paths:

  /catalog/collections:
    get:
      tags:
        - Collections
      summary: List all collections
      description: Returns a list of all collections
      operationId: listCollections
      consumes:
        - application/json
      produces:
        - application/xml
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Collection'
  /catalog/collections/{repoId}:
    get:
      tags:
        - Collections
      summary: Get a collection
      description: Get info for a single collection
      operationId: SingleCollection      
      consumes:
        - application/json
      produces:
        - application/xml
        - application/json
      parameters:
        - name: repoId
          in: path
          description: Collection ID
          required: true
          type: string
          format: string        
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Collection'
  /catalog/search:
    get:
      tags:
        - Catalog
      summary: Search catalog
      description: Search catalog
      operationId: CatalogSearch
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: sk
          in: path
          title: Study description keywords
          description: Keywords for searching study level metadata
          type: string
        - name: from
          in: path
          title: Start year
          description: Starting year for the data collection
          type: int
        - name: to
          in: path
          title: End year
          description: End year for the data collection
          type: int
        - name: country
          in: path
          title: Country name
          description: "Provide country name or ISO 3 code. For country names and codes, see endpoint `/api/catalog/country_codes`. For searching multiple countries, provide names separated by pipe(|). \n \n Example `Afghanistan|Indonesia` or `afg|ind` or `afghanistan|ind`"
          type: string
        - name: inc_iso
          in: path
          title: Include ISO codes
          description: Set the parameter value to true to include the ISO3 country codes for the results
          type: boolean
        - name: collection
          in: path
          title: Filter by collections
          description: Filter results by one or more collections. For filtering multiples, use format `collection1, collection2`
          type: string
        - name: created
          in: path
          title: Filter by date created
          description: Filter results by date of creation. Use the date format YYYY-MM-DD. Examples, `2020/04/01` returns records created on and after that date. To specify a date range, use the format `2020/04/01-2020/04/20`
          type: string  
        - name: dtype
          in: path
          title: Data access type
          description: Filter by data access types. For multiple values, use comma e.g. `open, direct, remote`
          type: string
          enum:
          - open
          - direct
          - public
          - licensed
          - enclave
          - remote
          - other 
        - name: ps
          in: path
          title: Page size
          description: Number of results per page. Default is 15 records per page
          type: int
        - name: page
          in: path
          title: Page
          description: Page to return for the search result
          type: int
        
        - name: sort_by
          in: path
          title: Sort results
          description: Sort search results. Valid options are `rank`,`title`,`year`,`nation`
          type: string
          enum:
          - rank
          - title
          - nation
          - year
        - name: sort_order
          in: path
          title: Sort order
          description: Set results sort order. Ascending = `asc`, Descending= `desc`
          type: string
          enum:
          - asc
          - desc
        - name: format
          in: path
          title: Result format
          description: Supported formats are `json`, `xml`
          type: string     

            
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: "#/definitions/Catalog"
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Bad input
  
  /catalog/country_codes:
    get:
      tags:
        - Catalog
      summary: List country codes
      description: List of country codes
      operationId: listCountryCodes
      consumes:
        - application/json
      produces:
        - application/xml
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/CountryCode'      
  /catalog/latest:
    get:
      tags:
        - Catalog
      summary: Latest catalog entries
      description: Latest studies added to the catalog
      operationId: latestStudies
      consumes:
        - application/json
      produces:
        - application/xml
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Catalog'
  
  /catalog/data_access_codes:
    get:
      tags:
        - Catalog
      summary: List data access types
      description: Data access types list
      operationId: listDataAccessTypes
      consumes:
        - application/json
      produces:
        - application/xml
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/DataAccessCode'
    
  /catalog/{idno}:
    get:
      tags:
        - Catalog
        - Metadata
      summary: Get study information
      description: "Get study level metadata for a dataset. The study data files and variables metadata can be accessed via the following endpoints. \n \n * [Data files](#operation/listDataFiles) - Metadata for data files \n \n * [Variables](#operation/listDataFileVariables) - Metadata for variables"
      operationId: singleDataset
      consumes:
        - application/json
      produces:
        - application/xml
        - application/json
      parameters:
        - name: IDNo
          in: path
          title: Study unique ID
          description: Study unique ID number
          type: string
          required: true
        - name: id_format
          in: query
          title: ID format
          description: To use the ID values instead of the IDNo, set id_format to ID
          type: string
          required: false
      responses:
        '200':
          description: successful operation
          schema:
              $ref: '../catalog-admin/survey-schema.json'

  /catalog/{idno}/data_files:
    get:
      tags:
        - Catalog
        - Metadata
      summary: List data files
      description: List all data files for a study
      operationId: listDataFiles
      consumes:
        - application/json
      produces:
        - application/xml
        - application/json
      parameters:
        - name: IDNo
          in: path
          title: Study unique ID
          description: Study unique ID number
          type: string
          required: true
        - name: id_format
          in: query
          title: ID format
          description: To use the ID values instead of the IDNo, set id_format to ID
          type: string
          required: false  
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Catalog'  
  /catalog/{IDNo}/data_files/{fileId}:
    get:
      tags:
        - Catalog
        - Metadata
      summary: Get single data file info
      description: Get metadata for a single data file
      operationId: singleDataFile
      consumes:
        - application/json
      produces:
        - application/xml
        - application/json
      parameters:
        - name: IDNo
          in: path
          title: Study unique ID
          description: Study unique ID number
          type: string
          required: true 
        - name: fileId
          in: path
          title: File ID
          description: File ID number
          type: string
          required: true
        - name: id_format
          in: query
          title: ID format
          description: To use the ID values instead of the IDNo, set id_format to ID
          type: string
          required: false  
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '../catalog-admin/datafile-schema.json'

  /catalog/{IDNo}/data_files/{fileId}/variables:
    get:
      tags:
        - Catalog
        - Metadata
      summary: Get variables by data file
      description: Get variables attached to a single data file. To find all variables for a study, use [Variables by data file](#operation/listVariables). 
      operationId: listDataFileVariables
      consumes:
        - application/json
      produces:
        - application/xml
        - application/json
      parameters:
        - name: IDNo
          in: path
          title: Study unique ID
          description: Study unique ID number
          type: string
          required: true 
        - name: fileId
          in: path
          title: File ID
          description: File ID number
          type: string
          required: true
        - name: id_format
          in: query
          title: ID format
          description: To use the ID values instead of the IDNo, set id_format to ID
          type: string
          required: false  
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Catalog'  
  
  /catalog/{IDNo}/variables:
    get:
      tags:
        - Catalog
        - Metadata
      summary: List variables by study
      description: List variables by study. To find variables by a data file, use [Variables by data file](#operation/listDataFileVariables). 
      operationId: listVariables
      consumes:
        - application/json
      produces:
        - application/xml
        - application/json
      parameters:
        - name: IDNo
          in: path
          title: Study unique ID
          description: Study unique ID number
          type: string
          required: true
        - name: id_format
          in: query
          title: ID format
          description: To use the ID values instead of the IDNo, set id_format to ID
          type: string
          required: false  
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '../catalog-admin/variable-schema.json'
  /catalog/{IDNo}/variables/{varId}:
    get:
      tags:
        - Catalog
        - Metadata
      summary: Find variable
      description: Get a single variable metadata
      operationId: findSingleVariable
      consumes:
        - application/json
      produces:
        - application/xml
        - application/json
      parameters:
        - name: IDNo
          in: path
          title: Study unique ID
          description: Study unique ID number
          type: string
          required: true
        - name: varId
          in: path
          title: Variable ID
          description: Variable ID
          type: string
          required: true
        - name: id_format
          in: query
          title: ID format
          description: To use the ID values instead of the IDNo, set id_format to ID
          type: string
          required: false  
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '../catalog-admin/variable-schema.json'   
  /catalog/ddi/{idno}:
    get:
      tags:
        - Metadata
      summary: Download DDI/XML
      description: Download DDI 2.5 CodeBook XML (available for microdata studies only)
      operationId: downloadDDI
      consumes:
        - application/json
      produces:
        - application/xml
      parameters:
        - name: IDNo
          in: path
          title: Study unique ID
          description: Study unique ID number
          type: string
          required: true
        - name: id_format
          in: query
          title: ID format
          description: To use the ID values instead of the IDNo, set id_format to ID
          type: string
          required: false  
      responses:
        '200':
          description: successful operation
  /catalog/json/{idno}:
    get:
      tags:
        - Metadata
      summary: Download JSON
      description: Download study metadata as JSON
      operationId: downloadJSON
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: IDNo
          in: path
          title: Study unique ID
          description: Study unique ID number
          type: string
          required: true
        - name: id_format
          in: query
          title: ID format
          description: To use the ID values instead of the IDNo, set id_format to ID
          type: string
          required: false  
      responses:
        '200':
          description: successful operation
###############################################################
definitions:
  Catalog:
    type: object
    properties:
      id:
        type: integer
        format: int64
        readOnly: true
      idno:
        type: string        
      title:
        type: string
      nation:
        type: string      
      created:
        type: string
        format: date-time
      changed:
        type: string
        format: date-time
    xml:
      name: Catalog
  Project:
    type: object
    properties:
      id:
        type: integer
        format: int64
        readOnly: true
      project_type:
        type: string
        enum:
          - survey
          - geospatial
      title:
        type: string
      description:
        type: string
      shortname:
        type: string
      collaborators:
        type: array
        format: email
        items:
          type: string
        example:
          - user@example.com
          - user2@example.com
      status:
        type: string
        readOnly: true
        description:
          Project status codes

          * `draft` - Draft mode

          * `submitted` - Project is submitted and locked for user to make any further changes

          * `processed` - Project accepted and is being processed

          * `closed` - Processing completed and project is completed

          * `published` - Project published to one or more catalogs

          * `cancelled` - Project was cancelled

        enum:
          - draft
          - submitted
          - processed
          - closed
          - cancelled
          - published
      created:
        type: string
        format: date-time
        readOnly: true         
      changed:
        type: string
        format: date-time
        readOnly: true           
    xml:
      name: Project

  ProjectAccessPolicy:
    type: object
    properties:
      id:
        type: integer
        format: int64
        readOnly: true
      access_policy:
        type: string
        description:
          Select the access policy suitable for your data.
          
          * `direct` - Direct access

          * `public` - Public access
          
          * `licensed` - Licensed access, require users to register and submit request for access
          
          * `enclave` - Data Enclave
          
          * `remote` - Date available from remote repository
          
          * `other` - Other

        enum:
          - open
          - direct
          - public
          - licensed
          - enclave
          - remote
          - other
      to_catalog:
        type: string
        description:
          
          Select catalog for publishing the data

          * `internal` - Internal catalog
          
          * `external` -External public catalog
        enum:
          - internal
          - external  
      is_embargoed:
        type: boolean
        description: Is the data embargoed?
        enum:
          - 0 [No]
          - 1 [Yes]
      embargoed_notes:
        type: string
        description: indicate the terms of the embargo e.g. time period and any other special instructions.
      disclosure_risk: 
        type: string      
        description: Safeguarding the identity and privacy of respondents that have provided the data is important. If the data files you are depositing contain any identifying variables (e.g., names, official ID numbers, precise GIS coordinates, etc) or any variables deemed otherwise sensitive in your study setting (e.g., ethnicity, tribe, religion, etc) please list these below so that access to these can be suppressed. 
      library_notes: 
        type: string      
        description: Notes for the deposit reviewers
      cc:
        type: string
        description: Enter the email addresses seperated by semicolon(;) of additional people you would like to receive a summary copy of your submission.
      created:
        type: string
        format: date-time
        readOnly: true         
      changed:
        type: string
        format: date-time
        readOnly: true     
    xml:
      name: MetadataSchema    
  Collection:
    type: object
    properties:
      id:
        type: integer
        format: int64
        readOnly: true
      repositoryID:
        type: string
        title: Collection unique ID
      title:
        type: string
        title: Collection title
      short_text:
        type: string
        title: Short description
      long_text:
        type: string
        title: Detailed description for the collection in HTML format
      thumbnail:
        type: string
        title: Collection thumbnail          
    xml:
      name: CollectionSchema
  CountryCode:
    type: object
    properties:
      countryid:
        type: integer
        format: int64
      name:
        type: string
        title: Country name
      iso:
        type: string
        title: Country ISO 3 code
    xml:
      name: CountryCodeSchema
  DataAccessCode:
    type: object
    properties:
      type:
        type: string
        title: Data access type
      title:
        type: string
        title: Title
    xml:
      name: DataAccessTypeSchema    
  AuthenticationResponse:
    type: object
    properties:
      id:
        type: integer
        format: int64
        readOnly: true
      user_id:
        type: int      
      username:
        type: string
      api-keys:
        type: object  
    xml:
      name: AuthenticationResponse    
  Resource:
    type: object
    properties:
      id:
        type: integer
        format: int64
        readOnly: true
      pid:
        type: integer
        format: int64
        description: Project ID
      resource_type:
        type: string
        enum:
          - microdata
          - questionnaire
          - report
          - table
          - other
      title:
        type: string
      description:
        type: string
      filename:
        type: string
      created:
        type: string
        format: date-time
      changed:
        type: string
        format: date-time
    xml:
      name: Resource
  Citation:
    type: object
    properties:
      id:
        type: integer
        format: int64
        readOnly: true
      pid:
        type: integer
        format: int64
        description: Project ID
      citation_type:
        type: string
        enum:
          - book
          - journal
          - article
          - website
          - other
      title:
        type: string
      subtitle:
        type: string
      authors:
        type: array
        items:
          type: object
          properties:
            fname:
              type: string
            lname:
              type: string
      volume:
        type: string
      issue:
        type: string
      idnumber:
        type: string
      edition:
        type: string
      pub_place:
        type: string
      publisher:
        type: string
      pub_medium:
        type: string
      url:
        type: string
      page_from:
        type: integer
      page_to:
        type: integer
      pub_date:
        type: string
        example: Full or partial date .e.g Month/Year or Year
      abstract:
        type: string
      keywords:
        type: string
      doi:
        type: string
      country:
        type: string
      created:
        type: string
        format: date-time
      changed:
        type: string
        format: date-time
    required:
      - pid
      - title
    xml:
      name: Citation
  
  
  
  ApiResponse:
    type: object
    properties:
      code:
        type: integer
        format: int32
      type:
        type: string
      message:
        type: string
